---

services:
  engineering-ai-agents-code:
      build:
        context: "."
        dockerfile: ./docker/Dockerfile.dev.gpu
      image: engineering-ai-agents-code
      shm_size: '8gb'  # Shared memory size
      user: vscode
      command: /bin/sh -c "while sleep 1000; do :; done"
      # depends_on:
      #   - minio
        #- postgresml
      environment:
      - NVIDIA_VISIBLE_DEVICES=all  # or specify GPUs as 0,1 for specific devices
      deploy:
        resources:
          reservations:
            devices:
            - driver: nvidia
              capabilities: ["gpu"]
              device_ids: ["all"]  # Specify GPU IDs if needed, or 'all' to use all available GPUs
      networks:
        - engineering-ai-agents-code-net
      
  # minio:
  #   image: minio/minio:latest
  #   container_name: minio
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"  # MinIO Console
  #   environment:
  #     MINIO_ROOT_USER: minioadmin
  #     MINIO_ROOT_PASSWORD: minioadmin
  #   command: server /data --console-address ":9001"
  #   volumes:
  #     - minio_data:/data
  #   networks:
  #     - engineering-ai-agents-code-net
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl --fail http://localhost:9000/minio/health/live || exit 1"]

  # postgresml:
  #   image: ghcr.io/postgresml/postgresml:2.9.3
  #   command: >
  #     sh -c "sudo -u postgresml psql -d postgresml"
  #   volumes:
  #     - postgresml_data:/var/lib/postgresql
  #   expose:
  #     - 54320
  #   ports:
  #     - "54320:5432"
  #     - "8000:8000"
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             capabilities: ["gpu"]
  #             device_ids: ["all"]  # Specify GPU IDs if needed, or 'all' to use all available GPUs
  #   stdin_open: true
  #   tty: true

networks:
  engineering-ai-agents-code-net:
    driver: bridge

volumes:
  minio_data:
  #postgresml_data:
  rye-cache:

